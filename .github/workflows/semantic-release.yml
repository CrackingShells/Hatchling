name: Semantic Release
run-name: ${{ github.actor }} is automatically releasing

on:
  push:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run tests
        run: python run_tests.py --regression --feature --skip requires_api_key

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.SEMANTIC_RELEASE_APP_ID }}
          private_key: ${{ secrets.SEMANTIC_RELEASE_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Debug token & actor
        env:
          APP_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "--- git remote ---"
          git remote -v || true
          echo
          echo "--- git config user ---"
          git config user.name || true
          git config user.email || true
          echo
          echo "--- GraphQL viewer (login / type) ---"
          curl -s -H "Authorization: Bearer $APP_TOKEN" -H "Accept: application/vnd.github+json" \
            -d '{"query":"{ viewer { login __typename } }"}' https://api.github.com/graphql || true
          echo
          echo "--- REST /repos response (first 200 lines) ---"
          curl -s -H "Authorization: Bearer $APP_TOKEN" -H "Accept: application/vnd.github+json" https://api.github.com/repos/${{ github.repository }} | sed -n '1,200p' || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Node dependencies
        run: npm ci

      - name: Verify npm audit
        run: npm audit signatures

      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: npx semantic-release
