name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.12'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Prepare version for build
      run: |
        python scripts/prepare_version.py

    - name: Build package
      run: |
        python -m build

    - name: Test package installation
      run: |
        pip install dist/*.whl

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Get version info
      id: version
      run: |
        VERSION=$(python scripts/version_manager.py --get)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Update VERSION file for main branch
      run: |
        python scripts/version_manager.py --update-for-branch main

    - name: Prepare version for build
      run: |
        python scripts/prepare_version.py

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          Release ${{ steps.version.outputs.version }}
          
          ## Changes
          - See commit history for detailed changes
          
          ## Installation
          ```bash
          pip install hatchling==${{ steps.version.outputs.version }}
          ```
        draft: false
        prerelease: false
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit updated VERSION file
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add VERSION
        git diff --staged --quiet || git commit -m "Update VERSION file for release ${{ steps.version.outputs.version }}"
        git push